[project]
name = "clarifai-monorepo"
version = "0.1.0"
description = "Monorepo for the ClarifAI project."
dependencies = [
    "python-dotenv>=1.0.0",
    "llama-index-core>=0.12.0",
    "llama-index-llms-openai>=0.2.0",
    "llama-index-embeddings-huggingface>=0.3.0",
    "llama-index-vector-stores-postgres>=0.2.0",
    "pyyaml>=6.0",
    "sentence-transformers>=3.0.0",
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "pgvector>=0.3.0",
    "neo4j>=5.0.0",
    "watchdog>=6.0.0",
    "pika>=1.3.2",
    "pytest>=8.4.0",
    "hnswlib>=0.8.0",
    "spacy>=3.7.0",
]
optional-dependencies = { dev = [
    "bandit>=1.8.0",
    "black>=25.1.0",
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.13",
    "pre-commit>=3.7.0",
]}

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
  "shared/clarifai_shared",
  "services/clarifai-core/clarifai_core",
  "services/clarifai-ui/clarifai_ui",
  "services/scheduler/clarifai_scheduler",
  "services/vault-watcher/clarifai_vault_watcher",
]

[tool.uv.sources]
# This tells uv: "Any time any package asks for `clarifai-shared`,
# don't go to PyPI. Instead, use the package from the local workspace."
clarifai-shared = { workspace = true }

[tool.uv.workspace]
members = [
    "services/clarifai-core",
    "services/vault-watcher",
    "services/scheduler",
    "services/clarifai-ui",
    "shared"
]

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
lint.select = ["E", "W", "F", "I", "B", "C4", "ARG", "SIM"]
lint.ignore = ["E501", "E203"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# Black configuration
[tool.black]
line-length = 88
target-version = ["py311"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests", "shared/tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--cov=clarifai_shared --cov=services --cov-report=term-missing --cov-report=xml --cov-config=pyproject.toml"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
source = ["clarifai_shared", "services"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

# Bandit configuration for ClarifAI monorepo
# Configuration to reduce false positives for containerized applications
[tool.bandit]
# Skip specific checks that are false positives for our use case:
# B101: Use of assert detected - Normal in test files
# B104: Hardcoded bind all interfaces - Intentional for containerized web apps
skips = ["B101", "B104"]

# Exclude test directories to avoid assert-related warnings
exclude_dirs = ["tests", "*/tests"]

# Focus on medium and high severity issues
severity = "medium"
confidence = "medium"
